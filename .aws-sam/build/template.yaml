AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: dev-sam stack
Globals:
  Function:
    Timeout: 60
    MemorySize: 128
    Architectures:
    - x86_64
Resources:
  IamStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: IamStack\template.yaml
      Parameters:
        DynamoDBTableArn:
          Fn::GetAtt:
          - DevSamRagAppTable
          - Arn
        CognitoUserPoolArn:
          Fn::GetAtt:
          - DevSamRagAppUserPool
          - Arn
    Metadata:
      SamResourceId: IamStack
  DevSamRagAppHttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      Name: dev-sam-rag-app-http-api
      CorsConfiguration:
        AllowOrigins:
        - '*'
        AllowMethods:
        - GET
        - POST
        - OPTIONS
        - DELETE
      Auth:
        Authorizers:
          CognitoAuthorizer:
            JwtConfiguration:
              issuer:
                Fn::Sub: https://cognito-idp.${AWS::Region}.amazonaws.com/${DevSamRagAppUserPool}
              audience:
              - Ref: DevSamRagAppUserPoolClient
            IdentitySource: $request.header.Authorization
        DefaultAuthorizer: CognitoAuthorizer
  DevSamRagPromptImagesFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: dev-sam-rag-prompt-images-function
      CodeUri: DevSamRagPromptImagesFunction
      Handler: index.handler
      Runtime: nodejs22.x
      Role:
        Fn::GetAtt:
        - IamStack
        - Outputs.DevSamLambdaPromptImagesRoleArn
      Events:
        PresignedUrl:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: DevSamRagAppHttpApi
            Path: /presigned-url
            Method: POST
    Metadata:
      SamResourceId: DevSamRagPromptImagesFunction
  DevSamS3ImagesFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: dev-sam-s3-images-function
      CodeUri: DevSamS3ImagesFunction
      Handler: index.handler
      Runtime: nodejs22.x
      Role:
        Fn::GetAtt:
        - IamStack
        - Outputs.DevSamLambdaS3ImagesRoleArn
      Events:
        GetImage:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: DevSamRagAppHttpApi
            Path: /get-image
            Method: POST
    Metadata:
      SamResourceId: DevSamS3ImagesFunction
  DevSamCognitoPostConfirmationFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: dev-sam-cognito-post-confirmation-function
      CodeUri: DevSamCognitoPostConfirmationFunction
      Handler: index.handler
      Runtime: nodejs22.x
      Role:
        Fn::GetAtt:
        - IamStack
        - Outputs.DevSamLambdaCognitoSESRoleArn
    Metadata:
      SamResourceId: DevSamCognitoPostConfirmationFunction
  DevSamCognitoUserEnableFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: dev-sam-cognito-user-enable-function
      CodeUri: DevSamCognitoUserEnableFunction
      Handler: index.handler
      Runtime: nodejs22.x
      Role:
        Fn::GetAtt:
        - IamStack
        - Outputs.DevSamLambdaCognitoSESRoleArn
    Metadata:
      SamResourceId: DevSamCognitoUserEnableFunction
  DevSamRagGenerateImageFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: dev-sam-rag-generate-image-function
      CodeUri: DevSamRagGenerateImageFunction
      Handler: index.handler
      Runtime: nodejs22.x
      Role:
        Fn::GetAtt:
        - IamStack
        - Outputs.DevSamLambdaGenerateRoleArn
    Metadata:
      SamResourceId: DevSamRagGenerateImageFunction
  DevSamRagGetChatsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: dev-sam-rag-get-chats-function
      CodeUri: DevSamRagGetChatsFunction
      Handler: app.lambda_handler
      Runtime: python3.13
      Role:
        Fn::GetAtt:
        - IamStack
        - Outputs.DevSamLambdaGetChatRoleArn
      Events:
        GetChats:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: DevSamRagAppHttpApi
            Path: /chats
            Method: GET
    Metadata:
      SamResourceId: DevSamRagGetChatsFunction
  DevSamSearchChatsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: dev-sam-search-chats-function
      CodeUri: DevSamSearchChatsFunction
      Handler: index.handler
      Runtime: nodejs22.x
      Role:
        Fn::GetAtt:
        - IamStack
        - Outputs.DevSamLambdaGetChatRoleArn
      Events:
        GETSearch:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: DevSamRagAppHttpApi
            Path: /search
            Method: GET
    Metadata:
      SamResourceId: DevSamSearchChatsFunction
  DevSamRagSseStreamFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: dev-sam-rag-sse-stream-function
      CodeUri: DevSamRagSseStreamFunction
      Handler: index.handler
      Runtime: nodejs22.x
      Role:
        Fn::GetAtt:
        - IamStack
        - Outputs.DevSamLambdaGenerateRoleArn
    Metadata:
      SamResourceId: DevSamRagSseStreamFunction
  DevSamRagGetChatDetailFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: dev-sam-rag-get-chat-detail-function
      CodeUri: DevSamRagGetChatDetailFunction
      Handler: app.lambda_handler
      Runtime: python3.13
      Role:
        Fn::GetAtt:
        - IamStack
        - Outputs.DevSamLambdaGetChatRoleArn
      Events:
        GetChatDetail:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: DevSamRagAppHttpApi
            Path: /chats/{chatId}
            Method: GET
        DeleteChatDetail:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: DevSamRagAppHttpApi
            Path: /chats/{chatId}
            Method: DELETE
    Metadata:
      SamResourceId: DevSamRagGetChatDetailFunction
  DevSamRagAppTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: dev-sam-rag-app-table
      AttributeDefinitions:
      - AttributeName: userId
        AttributeType: S
      KeySchema:
      - AttributeName: userId
        KeyType: HASH
      BillingMode: PAY_PER_REQUEST
  DevSamRagAppUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: dev-sam-rag-app-user-pool
      AutoVerifiedAttributes:
      - email
      Schema:
      - Name: email
        AttributeDataType: String
        Required: true
  DevSamRagAppUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: dev-sam-rag-app-client
      UserPoolId:
        Ref: DevSamRagAppUserPool
      AccessTokenValidity: 1
      IdTokenValidity: 1
      RefreshTokenValidity: 14
      PreventUserExistenceErrors: ENABLED
      TokenValidityUnits:
        AccessToken: days
        IdToken: days
        RefreshToken: days
