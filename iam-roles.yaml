AWSTemplateFormatVersion: '2010-09-09'
Description: IAM Roles for dev-sam stack

Parameters:
  DynamoDBTableArn:
    Type: String
  CognitoUserPoolArn:
    Type: String

Resources:
  DevSamLambdaGenerateRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      Policies:
        - PolicyName: SAMDynamoDBPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:DeleteItem
                  - dynamodb:UpdateItem
                Resource:
                  - !Ref DynamoDBTableArn
        - PolicyName: SAMBedrockPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - bedrock:InvokeModelWithResponseStream
                  - bedrock:GetInferenceProfile
                  - bedrock:InvokeModel
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - bedrock:Retrieve
                  - bedrock:RetrieveAndGenerate
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - bedrock:GetKnowledgeBase
                  - bedrock:ListKnowledgeBases
                Resource: "*"

  DevSamLambdaGetChatRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: SAMDynamoDBPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:DeleteItem
                  - dynamodb:UpdateItem
                Resource:
                  - !Ref DynamoDBTableArn

  DevSamLambdaPromptImagesRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonS3FullAccess

  DevSamLambdaS3ImagesRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      Policies:
        - PolicyName: SAMDynamoDBPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:DeleteItem
                  - dynamodb:UpdateItem
                Resource:
                  - !Ref DynamoDBTableArn

  DevSamLambdaCognitoSESRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: SAMCognitoPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ses:SendEmail
                  - ses:SendRawEmail
                Resource:
                  - !Sub "arn:aws:ses:${AWS::Region}:${AWS::AccountId}:identity/*"
              - Effect: Allow
                Action:
                  - cognito-idp:AdminDisableUser
                  - cognito-idp:AdminGetUser
                  - cognito-idp:ListUsers
                Resource:
                  - !Ref CognitoUserPoolArn

Outputs:
  DevSamLambdaGenerateRoleArn:
    Description: ARN of the DevSamLambdaGenerateRole
    Value: !GetAtt DevSamLambdaGenerateRole.Arn

  DevSamLambdaGetChatRoleArn:
    Description: ARN of the DevSamLambdaGetChatRole
    Value: !GetAtt DevSamLambdaGetChatRole.Arn

  DevSamLambdaPromptImagesRoleArn:
    Description: ARN of the DevSamLambdaPromptImagesRole
    Value: !GetAtt DevSamLambdaPromptImagesRole.Arn

  DevSamLambdaS3ImagesRoleArn:
    Description: ARN of the DevSamLambdaS3ImagesRole
    Value: !GetAtt DevSamLambdaS3ImagesRole.Arn

  DevSamLambdaCognitoSESRoleArn:
    Description: ARN of the DevSamLambdaCognitoSESRole
    Value: !GetAtt DevSamLambdaCognitoSESRole.Arn